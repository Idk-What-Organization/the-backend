{
    "openapi": "3.0.0",
    "info": {
        "title": "API IDK",
        "description": "API documentation for the IDK-API endpoints.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Main API Server"
        }
    ],
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "operationId": "cbdfadcef7f207ff45cb910b604cee12",
                "requestBody": {
                    "description": "Login using email or username and password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identity",
                                    "password"
                                ],
                                "properties": {
                                    "identity": {
                                        "description": "Can be an email or a username",
                                        "type": "string",
                                        "example": "andibudi"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "P@ssw0rd123!"
                                    },
                                    "remember_me": {
                                        "description": "Set to true to keep the user logged in for a longer period (e.g., 7 days).",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserAuth"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL2F1dGgvbG9naW4iLCJpYXQiOjE2NzgyMzU2NzgsImV4cCI6MTY3ODIzOTI3OCwibmJmIjoxNjc4MjM1Njc4LCJqdGkiOiJkZDU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YiIsInN1YiI6IjEiLCJwcnYyM2JkNTYwZjQ3ZTRjNzViYzY1NDIwYzBhYmYzNTczZTI3YjkwNDg1In0.some_jwt_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed! Please check the data you submitted."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "identity": [
                                                    "The provided credentials do not match our records."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Too many requests. Please try again in 60 seconds."
                                        },
                                        "retry_after_seconds": {
                                            "type": "string",
                                            "example": "60"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google/redirect": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Redirect user to Google login page",
                "description": "This endpoint redirects the user to the Google login page. It cannot be executed directly from Swagger UI.",
                "operationId": "ddd21b402e1cf7ac59ae0ef2b8b780ab",
                "responses": {
                    "302": {
                        "description": "Redirect to Google login"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the currently authenticated user",
                "operationId": "917952c141436d0f69042ffa1e8bea74",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated user's details",
                "operationId": "48edfbcda2f0c384729f7c66a8b34685",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAuth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify user email address",
                "operationId": "9b721c83160b3307b27436062a7f7303",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully!"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL2F1dGgvbG9naW4iLCJpYXQiOjE2NzgyMzU2NzgsImV4cCI6MTY3ODIzOTI3OCwibmJmIjoxNjc4MjM1Njc4LCJqdGkiOiJkZDU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YiIsInN1YiI6IjEiLCJwcnYyM2JkNTYwZjQ3ZTRjNzViYzY1NDIwYzBhYmYzNTczZTI3YjkwNDg1In0.some_jwt_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification link."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Email already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/email/resend/{user}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Resend email verification link without authentication",
                "operationId": "e0bb14d9c6d1293bc247dc18f72a7940",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A new verification link has been sent to your email.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A new verification link has been sent to your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email/resend-verification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Resend email verification link",
                "operationId": "cff665b45d56a732e530c0b46a53133b",
                "requestBody": {
                    "description": "Email address to resend verification link to",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verifikasi telah berhasil dikirim ulang.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verifikasi telah berhasil dikirim ulang."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Gagal mengirim ulang email verifikasi."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan server saat mencoba mengirim ulang email verifikasi."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email/verification-notification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Send email verification notification to authenticated user",
                "operationId": "41f7a4e292c0c7ea7421c60ffd8bf255",
                "responses": {
                    "200": {
                        "description": "A new verification link has been sent to your email address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A new verification link has been sent to your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many requests. Please try again in 60 seconds."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/profile": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update the authenticated user's profile",
                "operationId": "ec4d89d8f6ddc94a262b1fec57a8b625",
                "requestBody": {
                    "description": "Data to update user profile",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Andi Budi Updated"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "andibudi_updated"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Updated bio for Andi Budi.",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://updated.example.com",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserAuth"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "username": [
                                                    "The username has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "b4eafac359b473fe321c8f62d091bbd6",
                "requestBody": {
                    "description": "Data required to register a new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Andi Budi"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "andibudi"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "andi.budi@example.com"
                                    },
                                    "password": {
                                        "description": "Must be at least 8 characters and include uppercase, lowercase, number, and symbol.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "P@ssw0rd123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "P@ssw0rd123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserAuth"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL2F1dGgvbG9naW4iLCJpYXQiOjE2NzgyMzU2NzgsImV4cCI6MTY3ODIzOTI3OCwibmJmIjoxNjc4MjM1Njc4LCJqdGkiOiJkZDU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YiIsInN1YiI6IjEiLCJwcnYyM2JkNTYwZjQ3ZTRjNzViYzY1NDIwYzBhYmYzNTczZTI3YjkwNDg1In0.some_jwt_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Failed! Please check the data you submitted."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "username": [
                                                    "The username has already been taken."
                                                ],
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/token/refresh": {
            "post": {
                "tags": [
                    "Token"
                ],
                "summary": "Refresh an expired access token",
                "operationId": "3a71cb53a3856e2f77bf8b7ff01ed677",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL2F1dGgvbG9naW4iLCJpYXQiOjE2NzgyMzU2NzgsImV4cCI6MTY3ODIzOTI3OCwibmJmIjoxNjc4MjM1Njc4LCJqdGkiOiJkZDU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YjU2YiIsInN1YiI6IjEiLCJwcnYyM2JkNTYwZjQ3ZTRjNzViYzY1NDIwYzBhYmYzNTczZTI3YjkwNDg1In0.some_jwt_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration in seconds",
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Could not refresh token, please log in again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not refresh token, please log in again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{username}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the profile of a user by username",
                "operationId": "3c953d7a9e9cb91c3c5dbe815abe0074",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username of the user whose profile is to be displayed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User profile retrieved successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserAuth"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Comment": {
                "title": "Comment Model",
                "description": "Model yang merepresentasikan data komentar pada sebuah post.",
                "required": [
                    "id",
                    "user_id",
                    "post_id",
                    "body"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 201
                    },
                    "user_id": {
                        "description": "ID dari user yang berkomentar",
                        "type": "integer",
                        "example": 1
                    },
                    "post_id": {
                        "description": "ID dari post yang dikomentari",
                        "type": "integer",
                        "example": 101
                    },
                    "parent_id": {
                        "description": "ID dari komentar induk (jika ini adalah balasan)",
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "body": {
                        "description": "Isi dari komentar",
                        "type": "string",
                        "example": "Post yang sangat menginspirasi!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "replies": {
                        "description": "Daftar balasan untuk komentar ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "type": "object"
            },
            "Friendship": {
                "title": "Friendship Model",
                "description": "Pivot model yang merepresentasikan relasi pertemanan antar user.",
                "required": [
                    "user_id",
                    "friend_id",
                    "status"
                ],
                "properties": {
                    "user_id": {
                        "description": "ID dari user yang mengirim permintaan pertemanan",
                        "type": "integer",
                        "example": 1
                    },
                    "friend_id": {
                        "description": "ID dari user yang menerima permintaan pertemanan",
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "description": "Status pertemanan (e.g., pending, accepted, rejected)",
                        "type": "string",
                        "example": "accepted"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "friend": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Hashtag": {
                "title": "Hashtag Model",
                "description": "Model yang merepresentasikan sebuah hashtag.",
                "required": [
                    "id",
                    "tag"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 34
                    },
                    "tag": {
                        "description": "Nama tag unik tanpa karakter '#'",
                        "type": "string",
                        "example": "blessed"
                    }
                },
                "type": "object"
            },
            "PostImage": {
                "title": "Post Image Model",
                "description": "Model yang merepresentasikan sebuah gambar yang terikat pada post.",
                "required": [
                    "id",
                    "post_id",
                    "image_path"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 51
                    },
                    "post_id": {
                        "description": "ID dari post pemilik gambar",
                        "type": "integer",
                        "example": 101
                    },
                    "image_path": {
                        "description": "Path atau URL ke file gambar",
                        "type": "string",
                        "format": "uri",
                        "example": "images/posts/image123.jpg"
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post Model",
                "description": "Model yang merepresentasikan data post.",
                "required": [
                    "id",
                    "user_id",
                    "content"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 101
                    },
                    "user_id": {
                        "description": "ID dari user pemilik post",
                        "type": "integer",
                        "example": 1
                    },
                    "content": {
                        "description": "Isi konten dari post",
                        "type": "string",
                        "example": "Lihat pemandangan indah hari ini! #blessed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "images": {
                        "description": "Daftar gambar yang terasosiasi dengan post ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostImage"
                        }
                    },
                    "comments": {
                        "description": "Daftar komentar pada post ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    },
                    "likers": {
                        "description": "Daftar user yang menyukai post ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Model",
                "description": "Model yang merepresentasikan data user dalam aplikasi.",
                "required": [
                    "id",
                    "name",
                    "username",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "description": "Nama lengkap user",
                        "type": "string",
                        "example": "Andi Budi"
                    },
                    "username": {
                        "description": "Username unik user",
                        "type": "string",
                        "example": "andibudi"
                    },
                    "email": {
                        "description": "Alamat email unik user",
                        "type": "string",
                        "format": "email",
                        "example": "andi.budi@example.com"
                    },
                    "email_verified_at": {
                        "description": "Waktu verifikasi email",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-22T10:00:00.000000Z",
                        "nullable": true
                    },
                    "google_id": {
                        "description": "ID unik dari Google untuk login sosial",
                        "type": "string",
                        "example": "109876543210987654321",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Waktu pembuatan record",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Waktu pembaruan record terakhir",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "posts": {
                        "description": "Daftar post yang dibuat oleh user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Post"
                        }
                    },
                    "friends": {
                        "description": "Daftar teman dari user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "PrivateUserProfile": {
                "title": "Private User Profile",
                "description": "Full profile data visible only to the user themselves",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+628123456789"
                    },
                    "bio": {
                        "type": "string",
                        "example": "Developer and coffee lover"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "PublicUserProfile": {
                "title": "Public User Profile",
                "description": "Profile data visible to other users",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "bio": {
                        "type": "string",
                        "example": "Developer and coffee lover"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "UserAuth": {
                "title": "User Auth Schema",
                "description": "Schema untuk response data user saat login atau registrasi.",
                "required": [
                    "id",
                    "name",
                    "username",
                    "email"
                ],
                "properties": {
                    "id": {
                        "description": "ID unik user",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Nama lengkap user",
                        "type": "string",
                        "example": "Andi Budi"
                    },
                    "username": {
                        "description": "Username unik user",
                        "type": "string",
                        "example": "andibudi"
                    },
                    "email": {
                        "description": "Alamat email user",
                        "type": "string",
                        "format": "email",
                        "example": "andi.budi@example.com"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoints for user authentication, registration, login, and logout"
        },
        {
            "name": "Email Verification",
            "description": "Endpoints for email verification"
        },
        {
            "name": "Profile",
            "description": "Endpoints for user profile management"
        },
        {
            "name": "Token",
            "description": "Endpoints for token management"
        },
        {
            "name": "User",
            "description": "Endpoints for user information"
        }
    ]
}