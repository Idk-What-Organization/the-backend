{
    "openapi": "3.0.0",
    "info": {
        "title": "API IDK",
        "description": "API documentation for the IDK-API endpoints.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Main API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "bbf26d4d70399322bb78de720da1edd1",
                "requestBody": {
                    "description": "Data required to register a new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Andi Budi"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "andibudi"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "andi.budi@example.com"
                                    },
                                    "password": {
                                        "description": "Must be at least 8 characters and include uppercase, lowercase, number, and symbol.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "P@ssw0rd123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "P@ssw0rd123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserAuth"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|abcdef..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Failed! Please check the data you submitted."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "username": [
                                                    "The username has already been taken."
                                                ],
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "operationId": "5ba9b5607f79b9095d3c5b333a194835",
                "requestBody": {
                    "description": "Login using email or username and password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identity",
                                    "password"
                                ],
                                "properties": {
                                    "identity": {
                                        "description": "Can be an email or a username",
                                        "type": "string",
                                        "example": "andibudi"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "P@ssw0rd123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserAuth"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|abcdef..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed! Please check the data you submitted."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "identity": [
                                                    "The provided credentials do not match our records."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Too many requests. Please try again in 60 seconds."
                                        },
                                        "retry_after_seconds": {
                                            "type": "string",
                                            "example": "60"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/google/redirect": {
            "get": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Redirect user to Google login page",
                "description": "This endpoint redirects the user to the Google login page. It cannot be executed directly from Swagger UI.",
                "operationId": "8db2d866f0ef71a14c25200cf175e77e",
                "responses": {
                    "302": {
                        "description": "Redirect to Google login"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out the currently authenticated user",
                "operationId": "adca1304b2eae780ac36876f667bf036",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{username}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user's profile information",
                "description": "Fetch public profile data for a specific user by their username. This is a public endpoint and does not require authentication.",
                "operationId": "0076309ca4a09b38edd63261f5dede9d",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "andibudi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Andi Budi"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "andibudi"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Hello, world! This is my bio."
                                                },
                                                "joined_at": {
                                                    "type": "string",
                                                    "example": "July 25, 2025"
                                                },
                                                "photos": {
                                                    "properties": {
                                                        "profile": {
                                                            "type": "string",
                                                            "example": "url/to/profile.jpg"
                                                        },
                                                        "cover": {
                                                            "type": "string",
                                                            "example": "url/to/cover.jpg"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "posts_count": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "friends_count": {
                                                            "type": "integer",
                                                            "example": 42
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Comment": {
                "title": "Comment Model",
                "description": "Model yang merepresentasikan data komentar pada sebuah post.",
                "required": [
                    "id",
                    "user_id",
                    "post_id",
                    "body"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 201
                    },
                    "user_id": {
                        "description": "ID dari user yang berkomentar",
                        "type": "integer",
                        "example": 1
                    },
                    "post_id": {
                        "description": "ID dari post yang dikomentari",
                        "type": "integer",
                        "example": 101
                    },
                    "parent_id": {
                        "description": "ID dari komentar induk (jika ini adalah balasan)",
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "body": {
                        "description": "Isi dari komentar",
                        "type": "string",
                        "example": "Post yang sangat menginspirasi!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "replies": {
                        "description": "Daftar balasan untuk komentar ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "type": "object"
            },
            "Friendship": {
                "title": "Friendship Model",
                "description": "Pivot model yang merepresentasikan relasi pertemanan antar user.",
                "required": [
                    "user_id",
                    "friend_id",
                    "status"
                ],
                "properties": {
                    "user_id": {
                        "description": "ID dari user yang mengirim permintaan pertemanan",
                        "type": "integer",
                        "example": 1
                    },
                    "friend_id": {
                        "description": "ID dari user yang menerima permintaan pertemanan",
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "description": "Status pertemanan (e.g., pending, accepted, rejected)",
                        "type": "string",
                        "example": "accepted"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "friend": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Hashtag": {
                "title": "Hashtag Model",
                "description": "Model yang merepresentasikan sebuah hashtag.",
                "required": [
                    "id",
                    "tag"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 34
                    },
                    "tag": {
                        "description": "Nama tag unik tanpa karakter '#'",
                        "type": "string",
                        "example": "blessed"
                    }
                },
                "type": "object"
            },
            "PostImage": {
                "title": "Post Image Model",
                "description": "Model yang merepresentasikan sebuah gambar yang terikat pada post.",
                "required": [
                    "id",
                    "post_id",
                    "image_path"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 51
                    },
                    "post_id": {
                        "description": "ID dari post pemilik gambar",
                        "type": "integer",
                        "example": 101
                    },
                    "image_path": {
                        "description": "Path atau URL ke file gambar",
                        "type": "string",
                        "format": "uri",
                        "example": "images/posts/image123.jpg"
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post Model",
                "description": "Model yang merepresentasikan data post.",
                "required": [
                    "id",
                    "user_id",
                    "content"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 101
                    },
                    "user_id": {
                        "description": "ID dari user pemilik post",
                        "type": "integer",
                        "example": 1
                    },
                    "content": {
                        "description": "Isi konten dari post",
                        "type": "string",
                        "example": "Lihat pemandangan indah hari ini! #blessed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "images": {
                        "description": "Daftar gambar yang terasosiasi dengan post ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostImage"
                        }
                    },
                    "comments": {
                        "description": "Daftar komentar pada post ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    },
                    "likers": {
                        "description": "Daftar user yang menyukai post ini",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Model",
                "description": "Model yang merepresentasikan data user dalam aplikasi.",
                "required": [
                    "id",
                    "name",
                    "username",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "description": "Nama lengkap user",
                        "type": "string",
                        "example": "Andi Budi"
                    },
                    "username": {
                        "description": "Username unik user",
                        "type": "string",
                        "example": "andibudi"
                    },
                    "email": {
                        "description": "Alamat email unik user",
                        "type": "string",
                        "format": "email",
                        "example": "andi.budi@example.com"
                    },
                    "email_verified_at": {
                        "description": "Waktu verifikasi email",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-22T10:00:00.000000Z",
                        "nullable": true
                    },
                    "google_id": {
                        "description": "ID unik dari Google untuk login sosial",
                        "type": "string",
                        "example": "109876543210987654321",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Waktu pembuatan record",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Waktu pembaruan record terakhir",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "posts": {
                        "description": "Daftar post yang dibuat oleh user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Post"
                        }
                    },
                    "friends": {
                        "description": "Daftar teman dari user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "UserAuth": {
                "title": "User Auth Schema",
                "description": "Schema untuk response data user saat login atau registrasi.",
                "required": [
                    "id",
                    "name",
                    "username",
                    "email"
                ],
                "properties": {
                    "id": {
                        "description": "ID unik user",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Nama lengkap user",
                        "type": "string",
                        "example": "Andi Budi"
                    },
                    "username": {
                        "description": "Username unik user",
                        "type": "string",
                        "example": "andibudi"
                    },
                    "email": {
                        "description": "Alamat email user",
                        "type": "string",
                        "format": "email",
                        "example": "andi.budi@example.com"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoints for user authentication, registration, login, and logout"
        },
        {
            "name": "User",
            "description": "Endpoints for managing user data"
        },
        {
            "name": "OAuth",
            "description": "OAuth"
        }
    ]
}